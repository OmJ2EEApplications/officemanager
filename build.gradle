buildscript {
	ext {
		springBootVersion = '1.5.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

buildDir = 'target'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

group = 'com.cadashboard.org'
project.archivesBaseName = 'officemanager'
project.applicationName = 'officemanager'
project.mainClassName = "com.cadashboard.org.app.DashboardApplication"

war {
	baseName = 'officemanager'
	version = '0.0.1-SNAPSHOT'
	doFirst {
		from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	}
	exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
	manifest {
		attributes 'Main-Class': project.mainClassName
		attributes 'Implementation-Title': 'officemanager'
		attributes 'Implementation-Version': project.version
		attributes 'Implementation-Vendor': 'CA-Org Pune'
		attributes 'Implementation-Vendor-Id': 'com.cadashboard'
		attributes 'Built-On': new Date().format("yyyy-MM-dd hh:mm:ss")
	}
}

idea {
	module {
		inheritOutputDirs = false
		outputDir = file("$buildDir/classes/main/")
	}
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-freemarker')
	compile('org.springframework.boot:spring-boot-starter-integration')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-mobile')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.session:spring-session')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-web-services')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('mysql:mysql-connector-java')
	compileOnly('org.projectlombok:lombok')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}
